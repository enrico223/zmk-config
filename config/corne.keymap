/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt { tapping-term-ms = <250>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I         &kp O    &kp P           &kp BSPC
&kp TAB    &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K         &kp L    &mt RCTRL SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA     &kp DOT  &kp FSLH        &mt RSHIFT TAB
                         &kp RGUI  &mo 1  &kp SPACE    &kp ENTER  &mo 2  &kp LEFT_ALT
            >;
        };

        lower_layer {
            bindings = <
&kp TAB    &kp EXCL        &kp AT          &kp HASH        &kp DLLR        &kp PRCNT         &kp CARET     &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp RS(LG(N1))  &kp LG(RS(N2))  &kp LG(RS(N3))  &kp LG(RS(N4))  &kp LG(RS(N5))    &kp MINUS     &kp PLUS   &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp CAPS   &kp LG(RS(N6))  &kp LG(RS(N7))  &kp LG(RS(N8))  &kp LG(RS(N9))  &kp LG(RS(N0))    &kp UNDER     &kp EQUAL  &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                           &kp LGUI        &trans          &kp SPACE         &kp K_CANCEL  &mo 3      &kp RALT
            >;
        };

        raise_layer {
            bindings = <
&kp TAB        &kp CAPSLOCK  &kp F1  &kp F2    &kp F3  &kp PSCRN            &kp LG(LC(RIGHT))       &kp N1  &kp N2    &kp N3  &trans  &kp BSPC
&kp RA(GRAVE)  &trans        &kp F4  &kp F5    &kp F6  &kp C_VOLUME_UP      &kp LG(RC(LEFT_ARROW))  &kp N4  &kp N5    &kp N6  &trans  &trans
&kp LSHFT      &kp F10       &kp F7  &kp F8    &kp F9  &kp K_VOLUME_DOWN    &trans                  &kp N7  &kp N8    &kp N9  &kp N0  &trans
                                     &kp LGUI  &trans  &kp SPACE            &kp RET                 &trans  &kp RALT
            >;
        };

        adjust_layer {
            bindings = <
&trans      &trans        &trans        &trans        &trans        &kp C_VOLUME_UP      &kp C_BRI_UP  &kp PG_UP  &trans    &trans     &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &kp C_VOLUME_DOWN    &kp LEFT      &kp DOWN   &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans               &kp C_BRI_DN  &kp PG_DN  &trans    &trans     &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE            &kp RET       &trans     &kp RALT
            >;
        };
    };
};
